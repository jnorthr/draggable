////
/// Components
/// TransformedList
////

@import '../../styles/utilities/layout';
@import './props';

// .TransformedListWrapper {}

.TransformedList {
  @include centered-width(
    transformed-list-item(width)
  );
  position: relative;
  height: transformed-list(height);

  @media screen and (min-width: get-breakpoint(tablet)) {
    max-width: transformed-list-item(width, tablet);
    height: transformed-list(height, tablet);
  }
}

.TransformedListItem {
  position: absolute;
  left: 0;
  right: 0;
  height: 0;
}

.TransformedListContent {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  width: 100%;
  height: transformed-list-item(height);

  color: white;
  background-color: get-color(coal, dark);

  border: get-border();
  border-top-width: 1.6rem;
  border-color: get-color(coal, dark);

  transform: perspective(90rem) rotateX(60deg);
  backface-visibility: hidden;

  @media screen and (min-width: get-breakpoint(tablet)) {
    height: transformed-list-item(height, tablet);
    // border: get-border(thick);
    // border-width: 1.6rem;
    border-color: get-color(coal, dark);
  }
}

.TransformedListHeading {
  margin-top: get-type-scale(transformed, margin);
  font-size: get-type-scale(transformed);
  font-weight: get-type-scale(transformed, weight);
  line-height: get-type-scale(transformed, leading);

  @media screen and (min-width: get-breakpoint(tablet)) {
    font-size: get-type-scale(transformed, tablet);
  }
}

///
/// Draggable layout
// .TransformedListItem--isCloned:first-child + .TransformedListItem::before
.TransformedListItem:nth-child(1n+2) {
  .TransformedListContent::before {
    content: '';
    position: absolute;
    right: -#{transformed-shadow(offset)};
    bottom: transformed-shadow(bottom);
    left: -#{transformed-shadow(offset)};
    display: block;
    height: transformed-shadow(height);
    background-color: get-color(coal, dark);
    transition: transform get-duration(fast) get-easing();

    @media screen and (min-width: get-breakpoint(tablet)) {
      bottom: transformed-shadow(bottom, tablet);
      height: transformed-shadow(height, tablet);
    }
  }
}

.TransformedListItem {
  @for $i from 1 through $transformed-item-count {
    // &.TransformedListItem--isCloned ~ .TransformedListItem:nth-child(#{$i + 1})
    &:nth-child(#{$i}) {
      z-index: ($transformed-item-count + 1) - $i;
    }
  }

  @include transformed-item-offset;

  @media screen and (min-width: get-breakpoint(tablet)) {
    @include transformed-item-offset(tablet);
  }
}

///
/// Draggable Items
.TransformedListItem--isDraggable {
  cursor: get-cursor(drag);

  .TransformedListContent {
    color: get-color(coal, dark);
    background-color: white;
    border-color: currentColor;
    transition:
      color get-duration(fast) get-easing(),
      background-color get-duration(fast) get-easing(),
      border-color get-duration(fast) get-easing(),
      transform get-duration() get-easing(bungie);

    @media screen and (min-width: get-breakpoint(tablet)) {
      border-color: currentColor;
    }

    // @include halftone-bg;
  }

  // interaction
  &:focus,
  &:hover {
    .TransformedListContent {
      color: get-color(brand, blue);
      border-color: currentColor;
      transform: perspective(90rem) rotateX(60deg) translateY(get-spacing(tightest));

      &::before {
        transform: translateY(
          -(get-spacing(tightest))
        );
      }
    }
  }

  &.draggable-source--is-dragging {
    .TransformedListContent {
      color: get-color(brand, blue);

      // @include halftone-bg-animated;
    }
  }

  /*
    &.draggable-source--placed {
      .TransformedListContent::before {
        @include position-cover;
        content: '';
        display: block;
        background-color: get-color(brand, blue);
        animation: test get-duration() get-easing() both;
      }
    }
  */

  &.draggable-mirror {
    z-index: get-z-index(overlay);

    .TransformedListContent {
      color: white;
      background-color: get-color(brand, blue);
      border-color: get-color(brand, blue);
      transform: perspective(90rem) rotateX(60deg) scale(1.05);

      &::before {
        content: none;
      }
    }
  }
}
